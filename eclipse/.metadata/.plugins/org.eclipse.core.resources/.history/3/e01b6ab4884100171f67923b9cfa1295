package ru.stepan1404.daylies.events;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.eventhandler.SubscribeEvent;
import cpw.mods.fml.common.gameevent.PlayerEvent.PlayerLoggedInEvent;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.player.EntityPlayerMP;
import ru.stepan1404.daylies.Daylies;
import ru.stepan1404.daylies.messages.MessageGui;
import ru.stepan1404.daylies.utils.RewardBase;
import scala.actors.threadpool.Arrays;

public class LoginEvent {
	
	private File dir;
	
	public LoginEvent(FMLPreInitializationEvent e){
		this.dir = e.getModConfigurationDirectory();
	}

	@SubscribeEvent
	public synchronized void onPlayerLogin(PlayerLoggedInEvent e){
		if (!e.player.worldObj.isRemote) {
			try {
				File file = new File(dir + "/daylies/Daylies_Log.log");
				if (file.exists()) {
					//Read file
					FileReader fr = new FileReader(file);
					BufferedReader br = new BufferedReader(fr);
					String line;
					int day;
					boolean nameFound = false;
					//Write to buffer
					StringBuffer ib = new StringBuffer();
					while ((line = br.readLine()) != null) {
						ib.append(line);
						ib.append('\n');
					}
					fr.close();
					br.close();
					//Get current date
					Calendar calendar = Calendar.getInstance();
					calendar.setTime(new Date());

					String dM = calendar.get(Calendar.DAY_OF_MONTH)<10 ? "0" + calendar.get(Calendar.DAY_OF_MONTH): "" + calendar.get(Calendar.DAY_OF_MONTH);
					dM = dM + "." + (calendar.get(Calendar.MONTH)<10 ? "0" + (calendar.get(Calendar.MONTH)+1): "" + (calendar.get(Calendar.MONTH)+1));
					
					String yM = calendar.get(Calendar.DAY_OF_MONTH)<10 ? "0" + calendar.get(Calendar.DAY_OF_MONTH): "" + calendar.get(Calendar.DAY_OF_MONTH);
					yM = yM + "." + (calendar.get(Calendar.MONTH)<10 ? "0" + (calendar.get(Calendar.MONTH)+1): "" + (calendar.get(Calendar.MONTH)+1));
					
					
					List<String> lines = new ArrayList<String>();
					lines = Arrays.asList(ib.toString().split("\n"));
					lines = new ArrayList<String>(lines);
					//System.out.println(lines);
					//System.out.println(dM);
					//Search string with name or create this
					for(int i = 0;i<lines.size();i++){
						String pString = lines.get(i);
						if(pString.contains(e.player.getDisplayName())){
							String lastDate = pString.substring(e.player.getDisplayName().length()+3, pString.length());
							if(!lastDate.equals(dM)){
								day = Character.getNumericValue(pString.charAt(e.player.getDisplayName().length() + 1));
								if(day>0&&day<7){
									day++;
								} else {
									day = 1;
								}
								lines.set(i, e.player.getDisplayName() + ":" + day + ":" + dM);
								Daylies.network.sendTo(new MessageGui(day, RewardBase.rewards.get(day)), (EntityPlayerMP) e.player);
							}
							nameFound = true;
						}
					}

					if(!nameFound){
						lines.add(e.player.getDisplayName() + ":1:" + dM);
						Daylies.network.sendTo(new MessageGui(1, RewardBase.rewards.get(day)), (EntityPlayerMP) e.player);
					}
					//Write to file
					FileOutputStream fileOut = new FileOutputStream(file);
					fileOut.write(StringUtils.join(lines, '\n').getBytes());
					fileOut.close();
				}
			} catch (IOException exc) {
				exc.printStackTrace();
			}
		}
	}
}
